{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{useAuth}from'../contexts/AuthContext';import'../App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const[vendorCode,setVendorCode]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const[loading,setLoading]=useState(false);const navigate=useNavigate();const{login}=useAuth();const handleSubmit=async e=>{e.preventDefault();if(!vendorCode||!password){setError('Please enter both Vendor Code and Password');return;}setLoading(true);setError('');try{// In a real app, this would be an API call\n// For now, we'll simulate authentication\n// Mock user data based on vendor code\nconst userData={vendorCode:vendorCode,name:'John Doe',email:'john@example.com',role:getRoleFromVendorCode(vendorCode)};login(userData,userData.role);// Redirect based on role\nswitch(userData.role){case'seller':navigate('/dashboard/seller');break;case'buyer':navigate('/dashboard/buyer');break;case'captain':navigate('/dashboard/captain');break;case'admin':navigate('/dashboard/admin');break;case'hr':navigate('/dashboard/hr');break;case'accountant':navigate('/dashboard/accountant');break;case'arbitrator':navigate('/dashboard/arbitrator');break;case'surveyor':navigate('/dashboard/surveyor');break;case'insurance':navigate('/dashboard/insurance');break;case'transporter':navigate('/dashboard/transporter');break;case'logistics':navigate('/dashboard/logistics');break;case'cha':navigate('/dashboard/cha');break;default:navigate('/dashboard/buyer');}}catch(err){setError('Failed to login. Please check your credentials.');}setLoading(false);};const getRoleFromVendorCode=code=>{if(code.startsWith('S-'))return'seller';if(code.startsWith('B-'))return'buyer';if(code.startsWith('C-'))return'captain';if(code.startsWith('A-'))return'admin';if(code.startsWith('H-'))return'hr';if(code.startsWith('ACC-'))return'accountant';if(code.startsWith('ARB-'))return'arbitrator';if(code.startsWith('SUR-'))return'surveyor';if(code.startsWith('INS-'))return'insurance';if(code.startsWith('TRN-'))return'transporter';if(code.startsWith('LOG-'))return'logistics';if(code.startsWith('CHA-'))return'cha';return'buyer';};return/*#__PURE__*/_jsx(\"div\",{className:\"auth-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Login to MarsaFyi\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"vendorCode\",className:\"form-label\",children:\"Vendor Code\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"vendorCode\",className:\"form-control\",value:vendorCode,onChange:e=>setVendorCode(e.target.value),placeholder:\"Enter your Vendor Code\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",className:\"form-label\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",className:\"form-control\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Enter your Password\",required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn btn-primary\",disabled:loading,style:{width:'100%'},children:loading?'Logging in...':'Login'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"auth-links\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Don't have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/register\",children:\"Register\"})]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"/\",children:\"Back to Main Dashboard\"})})]})]})});};export default Login;","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsx","_jsx","jsxs","_jsxs","Login","vendorCode","setVendorCode","password","setPassword","error","setError","loading","setLoading","navigate","login","handleSubmit","e","preventDefault","userData","name","email","role","getRoleFromVendorCode","err","code","startsWith","className","children","onSubmit","htmlFor","type","id","value","onChange","target","placeholder","required","disabled","style","width","href"],"sources":["C:/Users/bhard/OneDrive/Desktop/marsa-fyi/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport '../App.css';\r\n\r\nconst Login = () => {\r\n  const [vendorCode, setVendorCode] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { login } = useAuth();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!vendorCode || !password) {\r\n      setError('Please enter both Vendor Code and Password');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // In a real app, this would be an API call\r\n      // For now, we'll simulate authentication\r\n      \r\n      // Mock user data based on vendor code\r\n      const userData = {\r\n        vendorCode: vendorCode,\r\n        name: 'John Doe',\r\n        email: 'john@example.com',\r\n        role: getRoleFromVendorCode(vendorCode)\r\n      };\r\n      \r\n      login(userData, userData.role);\r\n      \r\n      // Redirect based on role\r\n      switch(userData.role) {\r\n        case 'seller':\r\n          navigate('/dashboard/seller');\r\n          break;\r\n        case 'buyer':\r\n          navigate('/dashboard/buyer');\r\n          break;\r\n        case 'captain':\r\n          navigate('/dashboard/captain');\r\n          break;\r\n        case 'admin':\r\n          navigate('/dashboard/admin');\r\n          break;\r\n        case 'hr':\r\n          navigate('/dashboard/hr');\r\n          break;\r\n        case 'accountant':\r\n          navigate('/dashboard/accountant');\r\n          break;\r\n        case 'arbitrator':\r\n          navigate('/dashboard/arbitrator');\r\n          break;\r\n        case 'surveyor':\r\n          navigate('/dashboard/surveyor');\r\n          break;\r\n        case 'insurance':\r\n          navigate('/dashboard/insurance');\r\n          break;\r\n        case 'transporter':\r\n          navigate('/dashboard/transporter');\r\n          break;\r\n        case 'logistics':\r\n          navigate('/dashboard/logistics');\r\n          break;\r\n        case 'cha':\r\n          navigate('/dashboard/cha');\r\n          break;\r\n        default:\r\n          navigate('/dashboard/buyer');\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to login. Please check your credentials.');\r\n    }\r\n    \r\n    setLoading(false);\r\n  };\r\n  \r\n  const getRoleFromVendorCode = (code) => {\r\n    if (code.startsWith('S-')) return 'seller';\r\n    if (code.startsWith('B-')) return 'buyer';\r\n    if (code.startsWith('C-')) return 'captain';\r\n    if (code.startsWith('A-')) return 'admin';\r\n    if (code.startsWith('H-')) return 'hr';\r\n    if (code.startsWith('ACC-')) return 'accountant';\r\n    if (code.startsWith('ARB-')) return 'arbitrator';\r\n    if (code.startsWith('SUR-')) return 'surveyor';\r\n    if (code.startsWith('INS-')) return 'insurance';\r\n    if (code.startsWith('TRN-')) return 'transporter';\r\n    if (code.startsWith('LOG-')) return 'logistics';\r\n    if (code.startsWith('CHA-')) return 'cha';\r\n    return 'buyer';\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-container\">\r\n      <div className=\"auth-card\">\r\n        <h2>Login to MarsaFyi</h2>\r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"vendorCode\" className=\"form-label\">Vendor Code</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"vendorCode\"\r\n              className=\"form-control\"\r\n              value={vendorCode}\r\n              onChange={(e) => setVendorCode(e.target.value)}\r\n              placeholder=\"Enter your Vendor Code\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              className=\"form-control\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Enter your Password\"\r\n              required\r\n            />\r\n          </div>\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-primary\" \r\n            disabled={loading}\r\n            style={{ width: '100%' }}\r\n          >\r\n            {loading ? 'Logging in...' : 'Login'}\r\n          </button>\r\n        </form>\r\n        <div className=\"auth-links\">\r\n          <p>Don't have an account? <a href=\"/register\">Register</a></p>\r\n          <p><a href=\"/\">Back to Main Dashboard</a></p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}