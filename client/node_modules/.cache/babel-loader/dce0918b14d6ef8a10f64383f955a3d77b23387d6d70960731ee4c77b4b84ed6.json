{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhard\\\\OneDrive\\\\Desktop\\\\marsa-fyi\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  return useContext(AuthContext);\n}\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userRole, setUserRole] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const storedUser = localStorage.getItem('marsafyi_user');\n    const storedRole = localStorage.getItem('marsafyi_role');\n    if (storedUser) {\n      setCurrentUser(JSON.parse(storedUser));\n    }\n    if (storedRole) {\n      setUserRole(storedRole);\n    }\n    setLoading(false);\n  }, []);\n  function login(userData, role) {\n    setCurrentUser(userData);\n    setUserRole(role);\n    localStorage.setItem('marsafyi_user', JSON.stringify(userData));\n    localStorage.setItem('marsafyi_role', role);\n  }\n  function logout() {\n    setCurrentUser(null);\n    setUserRole(null);\n    localStorage.removeItem('marsafyi_user');\n    localStorage.removeItem('marsafyi_role');\n  }\n  function switchRole(newRole) {\n    setUserRole(newRole);\n    localStorage.setItem('marsafyi_role', newRole);\n  }\n  const value = {\n    currentUser,\n    userRole,\n    login,\n    logout,\n    switchRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"oJcdYGl4IB/GVvCCnTftfffWqnQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","userRole","setUserRole","loading","setLoading","storedUser","localStorage","getItem","storedRole","JSON","parse","login","userData","role","setItem","stringify","logout","removeItem","switchRole","newRole","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bhard/OneDrive/Desktop/marsa-fyi/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [userRole, setUserRole] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Initialize auth state from localStorage\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('marsafyi_user');\r\n    const storedRole = localStorage.getItem('marsafyi_role');\r\n    \r\n    if (storedUser) {\r\n      setCurrentUser(JSON.parse(storedUser));\r\n    }\r\n    \r\n    if (storedRole) {\r\n      setUserRole(storedRole);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  function login(userData, role) {\r\n    setCurrentUser(userData);\r\n    setUserRole(role);\r\n    localStorage.setItem('marsafyi_user', JSON.stringify(userData));\r\n    localStorage.setItem('marsafyi_role', role);\r\n  }\r\n\r\n  function logout() {\r\n    setCurrentUser(null);\r\n    setUserRole(null);\r\n    localStorage.removeItem('marsafyi_user');\r\n    localStorage.removeItem('marsafyi_role');\r\n  }\r\n\r\n  function switchRole(newRole) {\r\n    setUserRole(newRole);\r\n    localStorage.setItem('marsafyi_role', newRole);\r\n  }\r\n\r\n  const value = {\r\n    currentUser,\r\n    userRole,\r\n    login,\r\n    logout,\r\n    switchRole\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,SAASO,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,OAAOP,UAAU,CAACK,WAAW,CAAC;AAChC;AAACE,EAAA,CAFeD,OAAO;AAIvB,OAAO,SAASE,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,GAAA;EACzC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IACxD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;IAExD,IAAIF,UAAU,EAAE;MACdL,cAAc,CAACS,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;IACxC;IAEA,IAAIG,UAAU,EAAE;MACdN,WAAW,CAACM,UAAU,CAAC;IACzB;IAEAJ,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,SAASO,KAAKA,CAACC,QAAQ,EAAEC,IAAI,EAAE;IAC7Bb,cAAc,CAACY,QAAQ,CAAC;IACxBV,WAAW,CAACW,IAAI,CAAC;IACjBP,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAEL,IAAI,CAACM,SAAS,CAACH,QAAQ,CAAC,CAAC;IAC/DN,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAED,IAAI,CAAC;EAC7C;EAEA,SAASG,MAAMA,CAAA,EAAG;IAChBhB,cAAc,CAAC,IAAI,CAAC;IACpBE,WAAW,CAAC,IAAI,CAAC;IACjBI,YAAY,CAACW,UAAU,CAAC,eAAe,CAAC;IACxCX,YAAY,CAACW,UAAU,CAAC,eAAe,CAAC;EAC1C;EAEA,SAASC,UAAUA,CAACC,OAAO,EAAE;IAC3BjB,WAAW,CAACiB,OAAO,CAAC;IACpBb,YAAY,CAACQ,OAAO,CAAC,eAAe,EAAEK,OAAO,CAAC;EAChD;EAEA,MAAMC,KAAK,GAAG;IACZrB,WAAW;IACXE,QAAQ;IACRU,KAAK;IACLK,MAAM;IACNE;EACF,CAAC;EAED,oBACE1B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EAChC,CAACM,OAAO,IAAIN;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B;AAAC3B,GAAA,CArDeF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}